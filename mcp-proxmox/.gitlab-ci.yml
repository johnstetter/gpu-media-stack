workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.base_python_job:
  image: python:3.11
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .pip-cache/
      - venv/
  before_script:
    - python --version
    - python -m pip install --upgrade pip
    - python -m venv venv
    - . venv/bin/activate
    - pip install -r requirements.txt

stages:
  - verify
  - test
  - build

test:
  extends: .base_python_job
  stage: test
  script:
    - pip install -r requirements-dev.txt
    - pytest --cov=src tests/ --cov-report=xml
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  rules:
    - when: never  # Temporarily disabled

lint:
  extends: .base_python_job
  stage: verify
  script:
    - pip install -r requirements-dev.txt
    - flake8 src/ tests/ --exit-zero --format=pylint > flake8-report.txt
    - black --check src/ tests/
  allow_failure: true
  artifacts:
    reports:
      codequality: flake8-report.txt
    when: always

build:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  stage: build
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
